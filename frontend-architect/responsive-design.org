* 1. Tipos y formas de agregar media queries
***  Media querie *externo*
Si el ancho de la página está entre 0px y 800px se usa 'some-styles.css' 
#+BEGIN_SRC html
  <link rel="stylesheet" media="(max-width: 800px)" href="css/some-styles.css">
#+END_SRC

***  Media querie *interno*
Cambio de visulización al presionar 'CTRL + P' (imprimir)
#+BEGIN_SRC css 
  @media print {
    some-atribute: some-value;
  }   
#+END_SRC

Cambio de visualización en diferentes pantallas y hasta 800px de ancho
#+BEGIN_SRC css 
  @media screen and (max-width: 800px) {    
    background: peru;
    border: 15px solid lightblue;
    ...
    ...
    ...
  }
#+END_SRC

* 2. Adaptando nuestro diseño para tablets
*** Aplicación para probar nuestra página web en varios tipos de pantalla
- Windows Resizer

*** Usefull properties
#+BEGIN_SRC css 
  some-selector {display: inline-block;}

/*reset properties of your choose before to use them again*/
  some-selector {position: static;}

  some-selector {margin: 0}
  
  some-selector {height: auto}

  some-selector {list-style: none}
#+END_SRC

* 3. Adaptando nuestro proyecto para dispositivos móviles
*** To consider:

Móvil
@media (min-width: 576px) { … }

tablets, 768px a +
@media (min-width: 768px) { … }

desktops 992px a +
@media (min-width: 992px) { … }

desktops, 1200px a +
@media (min-width: 1200px) { … }

*** Add Media Queries and reset properties of your choose before to use them again

#+BEGIN_SRC css
  /*i.e. some IPAD*/
  @media screen and (max-width: 650px) {
    .footer {
      display: block;
    }
    
    .contact {
      margin: 0 auto;
    }

    .message some-selector {
      display: block;
    }

    .col {
      margin: 0;
    }
 
    /*'input' selector by type*/
    input[type="text"],
    input[type="email"] {
      zoom: 1.5;
    }
    input[type="radio"],
    input[type="checkbox"] {
      font-size: 11px;
      padding: 22px;
    }

    textarea {
      width: 100%;
    }

    and-maybe some others selectors {
      property1: value1;
      property2: value2;
      property3: value3;
      ...
      ...
      ...
    }
  }

  /*i.e. some smartphone*/
  @media screen and (max-width: 650px) {
    some-selector {
      property1: value1;
      property2: value2;
      property3: value3;
      ...
      ...
      ...
    }    

    some-selector {
      text-align: center;
    }

    somes selector {
      border: 1px solid red;
      position: static;
      display: block;
      text-align: center;
    }

    somes selector {
      margin: 0;
    }

    some-selector {
      padding: 0;
    }
  }
#+END_SRC

* 4. Utilizando el patrón off-canvas en el menú superior (Hamburger Menu, or others)
*** [[https://icomoon.io/][Íconos Prediseñados]]

Web para descargar bibliotecas CSS de íconos prediseñados

Ejemplo de uso:

- Primer paso

Create a media querie for the Hamburguer Menu like: 

#+BEGIN_SRC css
@media screen and (max-width: 500px)
  ...
  ...
  some-property {
    ...
    transition: .3s;
    ...
  }
  ...
  ...
#+END_SRC 

and do next:

#+BEGIN_SRC html
<!--Llamando a nuestro HTML, un ícono de menu prediseñado-->
<span class="icon-menu"></span>
#+END_SRC

- Segundo paso
#+BEGIN_SRC html
<!--Agregando una clase para editar 'span' según nuestro proyecto-->
<span class="burguer-button icon-menu"></span>
#+END_SRC

- Tercer paso
#+BEGIN_SRC css
  .burguer-button {
    width: 40px;
    line-height: 40px;
    height: 40px;
    background: #395667;
    display: inline-block;
    text-align: center;

    position: absolute;
    left: 0;
    cursor: pointer;
    top: 0;
  }
#+END_SRC

- etc...

*** Agregando el efecto de touch

Para 'activar' o 'desactivar' la aparición del menú en smartphones

#+BEGIN_SRC css
/*We create a class '.active' to use when the event happened*/
  .active {
    some-property: some-value;
   }
#+END_SRC

#+BEGIN_SRC html
<script>
  $burguerButton = document.getElementById('burguer-button');
  $menu = document.getElementById('menu');

  $burguerButton.addEventListener('touchstart', function() {
    $menu.classList.toggle('active')
  });  
</script>
#+END_SRC

* 5. Corrigiendo resoluciones con meta-viewport

#+BEGIN_SRC html
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
#+END_SRC
